{
  "console.log": {
    "prefix": "cl",
    "body": [
      "console.log(${0:'$1'});"
    ]
  },
  "console.info": {
    "prefix": "ci",
    "body": [
      "console.info(${0:'$1'});"
    ]
  },
  "console.warn": {
    "prefix": "cw",
    "body": [
      "console.warn(${0:'$1'});"
    ]
  },
  "console.error": {
    "prefix": "ce",
    "body": [
      "console.error(${0:'$1'});"
    ]
  },
  "console.time": {
    "prefix": "ct",
    "body": [
      "console.time(${0:'$1'});"
    ]
  },
  "console.timeEnd": {
    "prefix": "cte",
    "body": [
      "console.timeEnd(${0:'$1'});"
    ]
  },
  "JSON.stringify": {
    "prefix": "js",
    "body": [
      "JSON.stringify($0);"
    ]
  },
  "JSON.parse": {
    "prefix": "jp",
    "body": [
      "JSON.parse($0);"
    ]
  },
  "for..i": {
    "prefix": "fi",
    "body": [
      "for (let ${1:i} = ${2:0}; ${1:i} < $3; ${1:i}++) "
    ]
  },
  "for..in": {
    "prefix": "fin",
    "body": [
      "for (const $1 in $2) "
    ]
  },
  "for..of": {
    "prefix": "fof",
    "body": [
      "for (const $1 of $2) "
    ]
  },
  "require": {
    "prefix": "req",
    "body": [
      "const $1 = require('$0');"
    ]
  },
  "import": {
    "prefix": "imp",
    "body": [
      "import ${1:{ $2 \\}} from '$0';"
    ]
  },
  "function": {
    "prefix": "fn",
    "body": [
      "function $1() {",
      "\t$0",
      "}"
    ]
  },
  "async-function": {
    "prefix": "afn",
    "body": [
      "async function $1() {",
      "\t$0",
      "}"
    ]
  },
  "setTimeout": {
    "prefix": "timeout",
    "body": [
      "setTimeout(() => {",
      "\t$0",
      "}, $1);"
    ]
  },
  "setInterval": {
    "prefix": "interval",
    "body": [
      "setInterval(() => {",
      "\t$0",
      "}, $1);"
    ]
  },
  "promise": {
    "prefix": "promise",
    "body": [
      "new Promise((resolve${1:, reject}) => {",
      "\t$0",
      "});"
    ]
  },
  "setState": {
    "prefix": "ss",
    "body": [
      "this.setState({ $1 });"
    ]
  }
}
